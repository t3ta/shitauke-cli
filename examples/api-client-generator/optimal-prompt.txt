API仕様書からTypeScriptのAPIクライアントを単一のファイルとして生成してください。

重要: マークダウンコードブロック記法（```typescript や ```）は使わないでください。コードを直接出力してください。

## 技術要件
1. TypeScript（ESモジュール形式）
2. HTTPクライアント: axios
3. async/await + Promiseベースの設計
4. 完全な型安全性（TypeScriptの型システムを最大限活用）
5. エラーハンドリング（try-catch + カスタムエラークラス）
6. リクエストとレスポンスのシリアライズ/デシリアライズ
7. キャンセルトークンサポート
8. ログ/デバッグ支援機能
9. テスト容易性（モック可能な設計）

## コーディングスタイル
- クラスベースの実装
- メソッド名は動詞+名詞形式（例: getUsers, createUser）
- JSDoc形式のドキュメンテーション
- インターフェースを活用した拡張性の高い設計
- ESLint準拠のコード（不要なany型を避ける）

## 出力要件
- 型定義、エラー処理、ユーティリティ、クライアント実装を全て含む単一のTypeScriptファイル
- 適切なコメントで各セクションを区切る
- 使用例を含むドキュメント
- 拡張性と保守性を考慮したコード構造

## 特記事項
- API仕様のパスパラメータ({id}など)は適切に置換
- オプショナルパラメータは?修飾子で表現
- 日付型はDate型と文字列型の変換を適切に処理
- 認証情報はコンストラクタ+セッターで設定可能に
- エラーレスポンスは意味のあるメッセージに変換