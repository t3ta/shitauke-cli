# コードコメント・識別子翻訳ガイド

ソースコードのコメント部分と識別子（変数名・関数名・クラス名など）を日本語から英語に翻訳してください。コードの機能を維持しながら、国際的な開発環境で理解しやすいコードに変換することが目的です。

## 翻訳対象要素
以下の要素を適切な英語に翻訳してください：

1. **ドキュメンテーション**
   - 関数・クラスのdocstring
   - モジュールレベルのドキュメント
   - 行コメント（# で始まる行）
   - ブロックコメント（複数行コメント）

2. **識別子**
   - 関数名（`データ読み込み` → `load_data`）
   - 変数名（`ユーザー一覧` → `user_list`）
   - クラス名（`データ処理` → `DataProcessor`）
   - メソッド名（`値取得` → `get_value`）
   - 定数名（`最大数` → `MAX_COUNT`）

## 命名規則とスタイル
翻訳後のコードは以下の命名規則に従ってください：

1. **関数・変数名**: snake_case形式（例: `load_data`, `user_count`）
2. **クラス名**: PascalCase形式（例: `DataProcessor`, `UserAccount`）
3. **定数**: 大文字のSNAKE_CASE（例: `MAX_COUNT`, `API_KEY`）
4. **プライベート変数/メソッド**: アンダースコアプレフィックス（例: `_internal_value`）
5. **ブール変数**: `is_`, `has_`, `should_`などのプレフィックス（例: `is_valid`）

## 翻訳時の重要な注意点

### 保持すべき要素
- コードの機能や動作
- プログラムのロジックと構造
- ファイル構造と整形スタイル（インデント等）
- docstringの形式（引数、戻り値の説明など）

### 改善すべき点
- 略語や不明瞭な命名は、より明確な英語表現に改善してください
- 一貫性のない命名パターンは統一してください
- 技術的な表現は標準的な英語の専門用語を使用してください

### 翻訳しないもの
- 文字列リテラル内のテキスト（print文の中身、エラーメッセージなど）
- ライブラリインポート文のライブラリ名・モジュール名
- プログラミング言語のキーワード（if, for, while, class, defなど）
- 組み込み関数名（print, len, maxなど）
- マジックメソッド（__init__, __str__など）

## 言語固有の考慮点

### Python
- PEP 8スタイルガイドに準拠した命名規則
- docstringは"""三重引用符"""形式を維持
- selfやNone, Trueなどの特殊名は維持

### JavaScript/TypeScript
- キャメルケース（camelCase）による変数・関数命名
- コンストラクタ/クラス名はパスカルケース（PascalCase）
- JSDocコメントの構造を維持

### Java/C#
- キャメルケース（camelCase）による変数命名
- パスカルケース（PascalCase）によるメソッド・クラス命名
- Javadoc/C# XMLコメントの構造を維持

## 翻訳例

### 入力例（Python）:
```python
def データ読み込み(ファイルパス):
    """指定されたCSVファイルを読み込む
    
    引数:
        ファイルパス: 読み込むファイルのパス
    
    戻り値:
        データフレーム: 読み込んだデータ
    """
    # ファイルが存在するか確認
    if not os.path.exists(ファイルパス):
        raise FileNotFoundError("ファイルが見つかりません")
    
    データ = pd.read_csv(ファイルパス)
    return データ
```

### 期待される出力例:
```python
def load_data(file_path):
    """Load the specified CSV file
    
    Args:
        file_path: Path to the file to load
    
    Returns:
        DataFrame: The loaded data
    """
    # Check if file exists
    if not os.path.exists(file_path):
        raise FileNotFoundError("ファイルが見つかりません")
    
    data = pd.read_csv(file_path)
    return data
```

## 出力形式
- 翻訳されたコードを完全な形で出力してください
- 原文のコードの書式とインデントを正確に維持してください
- マークダウンコードブロックは使用せず、コードをそのまま出力してください
- 翻訳についての説明や注釈は含めないでください